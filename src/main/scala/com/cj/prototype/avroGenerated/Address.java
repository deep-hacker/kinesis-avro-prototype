/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cj.prototype.avroGenerated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Address extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2145038358167349672L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"com.cj.prototype.avroGenerated\",\"fields\":[{\"name\":\"city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"provinceState\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"streetAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"zipCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"latitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"regionName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"phoneNumber\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Address> ENCODER =
      new BinaryMessageEncoder<Address>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Address> DECODER =
      new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Address> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Address> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Address> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Address to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Address from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Address instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Address fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence city;
   private java.lang.CharSequence provinceState;
   private java.lang.CharSequence streetAddress;
   private java.lang.CharSequence zipCode;
   private java.lang.CharSequence latitude;
   private java.lang.CharSequence longitude;
   private java.lang.CharSequence regionName;
   private java.lang.CharSequence country;
   private java.lang.CharSequence phoneNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Address() {}

  /**
   * All-args constructor.
   * @param city The new value for city
   * @param provinceState The new value for provinceState
   * @param streetAddress The new value for streetAddress
   * @param zipCode The new value for zipCode
   * @param latitude The new value for latitude
   * @param longitude The new value for longitude
   * @param regionName The new value for regionName
   * @param country The new value for country
   * @param phoneNumber The new value for phoneNumber
   */
  public Address(java.lang.CharSequence city, java.lang.CharSequence provinceState, java.lang.CharSequence streetAddress, java.lang.CharSequence zipCode, java.lang.CharSequence latitude, java.lang.CharSequence longitude, java.lang.CharSequence regionName, java.lang.CharSequence country, java.lang.CharSequence phoneNumber) {
    this.city = city;
    this.provinceState = provinceState;
    this.streetAddress = streetAddress;
    this.zipCode = zipCode;
    this.latitude = latitude;
    this.longitude = longitude;
    this.regionName = regionName;
    this.country = country;
    this.phoneNumber = phoneNumber;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return city;
    case 1: return provinceState;
    case 2: return streetAddress;
    case 3: return zipCode;
    case 4: return latitude;
    case 5: return longitude;
    case 6: return regionName;
    case 7: return country;
    case 8: return phoneNumber;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: city = (java.lang.CharSequence)value$; break;
    case 1: provinceState = (java.lang.CharSequence)value$; break;
    case 2: streetAddress = (java.lang.CharSequence)value$; break;
    case 3: zipCode = (java.lang.CharSequence)value$; break;
    case 4: latitude = (java.lang.CharSequence)value$; break;
    case 5: longitude = (java.lang.CharSequence)value$; break;
    case 6: regionName = (java.lang.CharSequence)value$; break;
    case 7: country = (java.lang.CharSequence)value$; break;
    case 8: phoneNumber = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'provinceState' field.
   * @return The value of the 'provinceState' field.
   */
  public java.lang.CharSequence getProvinceState() {
    return provinceState;
  }


  /**
   * Sets the value of the 'provinceState' field.
   * @param value the value to set.
   */
  public void setProvinceState(java.lang.CharSequence value) {
    this.provinceState = value;
  }

  /**
   * Gets the value of the 'streetAddress' field.
   * @return The value of the 'streetAddress' field.
   */
  public java.lang.CharSequence getStreetAddress() {
    return streetAddress;
  }


  /**
   * Sets the value of the 'streetAddress' field.
   * @param value the value to set.
   */
  public void setStreetAddress(java.lang.CharSequence value) {
    this.streetAddress = value;
  }

  /**
   * Gets the value of the 'zipCode' field.
   * @return The value of the 'zipCode' field.
   */
  public java.lang.CharSequence getZipCode() {
    return zipCode;
  }


  /**
   * Sets the value of the 'zipCode' field.
   * @param value the value to set.
   */
  public void setZipCode(java.lang.CharSequence value) {
    this.zipCode = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.CharSequence getLatitude() {
    return latitude;
  }


  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.CharSequence value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.CharSequence getLongitude() {
    return longitude;
  }


  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.CharSequence value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'regionName' field.
   * @return The value of the 'regionName' field.
   */
  public java.lang.CharSequence getRegionName() {
    return regionName;
  }


  /**
   * Sets the value of the 'regionName' field.
   * @param value the value to set.
   */
  public void setRegionName(java.lang.CharSequence value) {
    this.regionName = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }


  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public java.lang.CharSequence getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.CharSequence value) {
    this.phoneNumber = value;
  }

  /**
   * Creates a new Address RecordBuilder.
   * @return A new Address RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Address.Builder newBuilder() {
    return new com.cj.prototype.avroGenerated.Address.Builder();
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Address RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Address.Builder newBuilder(com.cj.prototype.avroGenerated.Address.Builder other) {
    if (other == null) {
      return new com.cj.prototype.avroGenerated.Address.Builder();
    } else {
      return new com.cj.prototype.avroGenerated.Address.Builder(other);
    }
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Address instance.
   * @param other The existing instance to copy.
   * @return A new Address RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Address.Builder newBuilder(com.cj.prototype.avroGenerated.Address other) {
    if (other == null) {
      return new com.cj.prototype.avroGenerated.Address.Builder();
    } else {
      return new com.cj.prototype.avroGenerated.Address.Builder(other);
    }
  }

  /**
   * RecordBuilder for Address instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Address>
    implements org.apache.avro.data.RecordBuilder<Address> {

    private java.lang.CharSequence city;
    private java.lang.CharSequence provinceState;
    private java.lang.CharSequence streetAddress;
    private java.lang.CharSequence zipCode;
    private java.lang.CharSequence latitude;
    private java.lang.CharSequence longitude;
    private java.lang.CharSequence regionName;
    private java.lang.CharSequence country;
    private java.lang.CharSequence phoneNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cj.prototype.avroGenerated.Address.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.city)) {
        this.city = data().deepCopy(fields()[0].schema(), other.city);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.provinceState)) {
        this.provinceState = data().deepCopy(fields()[1].schema(), other.provinceState);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.streetAddress)) {
        this.streetAddress = data().deepCopy(fields()[2].schema(), other.streetAddress);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[3].schema(), other.zipCode);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.latitude)) {
        this.latitude = data().deepCopy(fields()[4].schema(), other.latitude);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.longitude)) {
        this.longitude = data().deepCopy(fields()[5].schema(), other.longitude);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.regionName)) {
        this.regionName = data().deepCopy(fields()[6].schema(), other.regionName);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.country)) {
        this.country = data().deepCopy(fields()[7].schema(), other.country);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[8].schema(), other.phoneNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing Address instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cj.prototype.avroGenerated.Address other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.city)) {
        this.city = data().deepCopy(fields()[0].schema(), other.city);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.provinceState)) {
        this.provinceState = data().deepCopy(fields()[1].schema(), other.provinceState);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.streetAddress)) {
        this.streetAddress = data().deepCopy(fields()[2].schema(), other.streetAddress);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[3].schema(), other.zipCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.latitude)) {
        this.latitude = data().deepCopy(fields()[4].schema(), other.latitude);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.longitude)) {
        this.longitude = data().deepCopy(fields()[5].schema(), other.longitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.regionName)) {
        this.regionName = data().deepCopy(fields()[6].schema(), other.regionName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.country)) {
        this.country = data().deepCopy(fields()[7].schema(), other.country);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[8].schema(), other.phoneNumber);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.city = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearCity() {
      city = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'provinceState' field.
      * @return The value.
      */
    public java.lang.CharSequence getProvinceState() {
      return provinceState;
    }


    /**
      * Sets the value of the 'provinceState' field.
      * @param value The value of 'provinceState'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setProvinceState(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.provinceState = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'provinceState' field has been set.
      * @return True if the 'provinceState' field has been set, false otherwise.
      */
    public boolean hasProvinceState() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'provinceState' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearProvinceState() {
      provinceState = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'streetAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getStreetAddress() {
      return streetAddress;
    }


    /**
      * Sets the value of the 'streetAddress' field.
      * @param value The value of 'streetAddress'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setStreetAddress(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.streetAddress = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'streetAddress' field has been set.
      * @return True if the 'streetAddress' field has been set, false otherwise.
      */
    public boolean hasStreetAddress() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'streetAddress' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearStreetAddress() {
      streetAddress = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'zipCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getZipCode() {
      return zipCode;
    }


    /**
      * Sets the value of the 'zipCode' field.
      * @param value The value of 'zipCode'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setZipCode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.zipCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'zipCode' field has been set.
      * @return True if the 'zipCode' field has been set, false otherwise.
      */
    public boolean hasZipCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'zipCode' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearZipCode() {
      zipCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.CharSequence getLatitude() {
      return latitude;
    }


    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setLatitude(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.latitude = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.CharSequence getLongitude() {
      return longitude;
    }


    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setLongitude(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.longitude = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'regionName' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegionName() {
      return regionName;
    }


    /**
      * Sets the value of the 'regionName' field.
      * @param value The value of 'regionName'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setRegionName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.regionName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'regionName' field has been set.
      * @return True if the 'regionName' field has been set, false otherwise.
      */
    public boolean hasRegionName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'regionName' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearRegionName() {
      regionName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }


    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.country = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearCountry() {
      country = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder setPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.phoneNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Address.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Address build() {
      try {
        Address record = new Address();
        record.city = fieldSetFlags()[0] ? this.city : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.provinceState = fieldSetFlags()[1] ? this.provinceState : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.streetAddress = fieldSetFlags()[2] ? this.streetAddress : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.zipCode = fieldSetFlags()[3] ? this.zipCode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.latitude = fieldSetFlags()[4] ? this.latitude : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.longitude = fieldSetFlags()[5] ? this.longitude : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.regionName = fieldSetFlags()[6] ? this.regionName : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.country = fieldSetFlags()[7] ? this.country : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.phoneNumber = fieldSetFlags()[8] ? this.phoneNumber : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Address>
    WRITER$ = (org.apache.avro.io.DatumWriter<Address>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Address>
    READER$ = (org.apache.avro.io.DatumReader<Address>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.city == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.city);
    }

    if (this.provinceState == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.provinceState);
    }

    if (this.streetAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.streetAddress);
    }

    if (this.zipCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.zipCode);
    }

    if (this.latitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.latitude);
    }

    if (this.longitude == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.longitude);
    }

    if (this.regionName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.regionName);
    }

    if (this.country == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.country);
    }

    if (this.phoneNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.phoneNumber);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.city = null;
      } else {
        this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.provinceState = null;
      } else {
        this.provinceState = in.readString(this.provinceState instanceof Utf8 ? (Utf8)this.provinceState : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.streetAddress = null;
      } else {
        this.streetAddress = in.readString(this.streetAddress instanceof Utf8 ? (Utf8)this.streetAddress : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.zipCode = null;
      } else {
        this.zipCode = in.readString(this.zipCode instanceof Utf8 ? (Utf8)this.zipCode : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.latitude = null;
      } else {
        this.latitude = in.readString(this.latitude instanceof Utf8 ? (Utf8)this.latitude : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.longitude = null;
      } else {
        this.longitude = in.readString(this.longitude instanceof Utf8 ? (Utf8)this.longitude : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.regionName = null;
      } else {
        this.regionName = in.readString(this.regionName instanceof Utf8 ? (Utf8)this.regionName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.country = null;
      } else {
        this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.phoneNumber = null;
      } else {
        this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.city = null;
          } else {
            this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.provinceState = null;
          } else {
            this.provinceState = in.readString(this.provinceState instanceof Utf8 ? (Utf8)this.provinceState : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.streetAddress = null;
          } else {
            this.streetAddress = in.readString(this.streetAddress instanceof Utf8 ? (Utf8)this.streetAddress : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.zipCode = null;
          } else {
            this.zipCode = in.readString(this.zipCode instanceof Utf8 ? (Utf8)this.zipCode : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.latitude = null;
          } else {
            this.latitude = in.readString(this.latitude instanceof Utf8 ? (Utf8)this.latitude : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.longitude = null;
          } else {
            this.longitude = in.readString(this.longitude instanceof Utf8 ? (Utf8)this.longitude : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.regionName = null;
          } else {
            this.regionName = in.readString(this.regionName instanceof Utf8 ? (Utf8)this.regionName : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.country = null;
          } else {
            this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.phoneNumber = null;
          } else {
            this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










