/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cj.prototype.avroGenerated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Tax extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3010762160996492370L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tax\",\"namespace\":\"com.cj.prototype.avroGenerated\",\"fields\":[{\"name\":\"rate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"countryCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"region\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalcode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"locationId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"locationGroupName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"taxShip\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Tax> ENCODER =
      new BinaryMessageEncoder<Tax>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Tax> DECODER =
      new BinaryMessageDecoder<Tax>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Tax> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Tax> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Tax> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Tax>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Tax to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Tax from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Tax instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Tax fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence rate;
   private java.lang.CharSequence countryCode;
   private java.lang.CharSequence region;
   private java.lang.CharSequence postalcode;
   private java.lang.CharSequence locationId;
   private java.lang.CharSequence locationGroupName;
   private java.lang.Boolean taxShip;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Tax() {}

  /**
   * All-args constructor.
   * @param rate The new value for rate
   * @param countryCode The new value for countryCode
   * @param region The new value for region
   * @param postalcode The new value for postalcode
   * @param locationId The new value for locationId
   * @param locationGroupName The new value for locationGroupName
   * @param taxShip The new value for taxShip
   */
  public Tax(java.lang.CharSequence rate, java.lang.CharSequence countryCode, java.lang.CharSequence region, java.lang.CharSequence postalcode, java.lang.CharSequence locationId, java.lang.CharSequence locationGroupName, java.lang.Boolean taxShip) {
    this.rate = rate;
    this.countryCode = countryCode;
    this.region = region;
    this.postalcode = postalcode;
    this.locationId = locationId;
    this.locationGroupName = locationGroupName;
    this.taxShip = taxShip;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rate;
    case 1: return countryCode;
    case 2: return region;
    case 3: return postalcode;
    case 4: return locationId;
    case 5: return locationGroupName;
    case 6: return taxShip;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rate = (java.lang.CharSequence)value$; break;
    case 1: countryCode = (java.lang.CharSequence)value$; break;
    case 2: region = (java.lang.CharSequence)value$; break;
    case 3: postalcode = (java.lang.CharSequence)value$; break;
    case 4: locationId = (java.lang.CharSequence)value$; break;
    case 5: locationGroupName = (java.lang.CharSequence)value$; break;
    case 6: taxShip = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'rate' field.
   * @return The value of the 'rate' field.
   */
  public java.lang.CharSequence getRate() {
    return rate;
  }


  /**
   * Sets the value of the 'rate' field.
   * @param value the value to set.
   */
  public void setRate(java.lang.CharSequence value) {
    this.rate = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   * @return The value of the 'countryCode' field.
   */
  public java.lang.CharSequence getCountryCode() {
    return countryCode;
  }


  /**
   * Sets the value of the 'countryCode' field.
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.CharSequence value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'region' field.
   * @return The value of the 'region' field.
   */
  public java.lang.CharSequence getRegion() {
    return region;
  }


  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'postalcode' field.
   * @return The value of the 'postalcode' field.
   */
  public java.lang.CharSequence getPostalcode() {
    return postalcode;
  }


  /**
   * Sets the value of the 'postalcode' field.
   * @param value the value to set.
   */
  public void setPostalcode(java.lang.CharSequence value) {
    this.postalcode = value;
  }

  /**
   * Gets the value of the 'locationId' field.
   * @return The value of the 'locationId' field.
   */
  public java.lang.CharSequence getLocationId() {
    return locationId;
  }


  /**
   * Sets the value of the 'locationId' field.
   * @param value the value to set.
   */
  public void setLocationId(java.lang.CharSequence value) {
    this.locationId = value;
  }

  /**
   * Gets the value of the 'locationGroupName' field.
   * @return The value of the 'locationGroupName' field.
   */
  public java.lang.CharSequence getLocationGroupName() {
    return locationGroupName;
  }


  /**
   * Sets the value of the 'locationGroupName' field.
   * @param value the value to set.
   */
  public void setLocationGroupName(java.lang.CharSequence value) {
    this.locationGroupName = value;
  }

  /**
   * Gets the value of the 'taxShip' field.
   * @return The value of the 'taxShip' field.
   */
  public java.lang.Boolean getTaxShip() {
    return taxShip;
  }


  /**
   * Sets the value of the 'taxShip' field.
   * @param value the value to set.
   */
  public void setTaxShip(java.lang.Boolean value) {
    this.taxShip = value;
  }

  /**
   * Creates a new Tax RecordBuilder.
   * @return A new Tax RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Tax.Builder newBuilder() {
    return new com.cj.prototype.avroGenerated.Tax.Builder();
  }

  /**
   * Creates a new Tax RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Tax RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Tax.Builder newBuilder(com.cj.prototype.avroGenerated.Tax.Builder other) {
    if (other == null) {
      return new com.cj.prototype.avroGenerated.Tax.Builder();
    } else {
      return new com.cj.prototype.avroGenerated.Tax.Builder(other);
    }
  }

  /**
   * Creates a new Tax RecordBuilder by copying an existing Tax instance.
   * @param other The existing instance to copy.
   * @return A new Tax RecordBuilder
   */
  public static com.cj.prototype.avroGenerated.Tax.Builder newBuilder(com.cj.prototype.avroGenerated.Tax other) {
    if (other == null) {
      return new com.cj.prototype.avroGenerated.Tax.Builder();
    } else {
      return new com.cj.prototype.avroGenerated.Tax.Builder(other);
    }
  }

  /**
   * RecordBuilder for Tax instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tax>
    implements org.apache.avro.data.RecordBuilder<Tax> {

    private java.lang.CharSequence rate;
    private java.lang.CharSequence countryCode;
    private java.lang.CharSequence region;
    private java.lang.CharSequence postalcode;
    private java.lang.CharSequence locationId;
    private java.lang.CharSequence locationGroupName;
    private java.lang.Boolean taxShip;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cj.prototype.avroGenerated.Tax.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rate)) {
        this.rate = data().deepCopy(fields()[0].schema(), other.rate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[1].schema(), other.countryCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.region)) {
        this.region = data().deepCopy(fields()[2].schema(), other.region);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.postalcode)) {
        this.postalcode = data().deepCopy(fields()[3].schema(), other.postalcode);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.locationId)) {
        this.locationId = data().deepCopy(fields()[4].schema(), other.locationId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.locationGroupName)) {
        this.locationGroupName = data().deepCopy(fields()[5].schema(), other.locationGroupName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.taxShip)) {
        this.taxShip = data().deepCopy(fields()[6].schema(), other.taxShip);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing Tax instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cj.prototype.avroGenerated.Tax other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.rate)) {
        this.rate = data().deepCopy(fields()[0].schema(), other.rate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[1].schema(), other.countryCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.region)) {
        this.region = data().deepCopy(fields()[2].schema(), other.region);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.postalcode)) {
        this.postalcode = data().deepCopy(fields()[3].schema(), other.postalcode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.locationId)) {
        this.locationId = data().deepCopy(fields()[4].schema(), other.locationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.locationGroupName)) {
        this.locationGroupName = data().deepCopy(fields()[5].schema(), other.locationGroupName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.taxShip)) {
        this.taxShip = data().deepCopy(fields()[6].schema(), other.taxShip);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'rate' field.
      * @return The value.
      */
    public java.lang.CharSequence getRate() {
      return rate;
    }


    /**
      * Sets the value of the 'rate' field.
      * @param value The value of 'rate'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setRate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.rate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rate' field has been set.
      * @return True if the 'rate' field has been set, false otherwise.
      */
    public boolean hasRate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'rate' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearRate() {
      rate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryCode() {
      return countryCode;
    }


    /**
      * Sets the value of the 'countryCode' field.
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setCountryCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.countryCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'region' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegion() {
      return region;
    }


    /**
      * Sets the value of the 'region' field.
      * @param value The value of 'region'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.region = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'region' field has been set.
      * @return True if the 'region' field has been set, false otherwise.
      */
    public boolean hasRegion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'region' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearRegion() {
      region = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostalcode() {
      return postalcode;
    }


    /**
      * Sets the value of the 'postalcode' field.
      * @param value The value of 'postalcode'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setPostalcode(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.postalcode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'postalcode' field has been set.
      * @return True if the 'postalcode' field has been set, false otherwise.
      */
    public boolean hasPostalcode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'postalcode' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearPostalcode() {
      postalcode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationId' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocationId() {
      return locationId;
    }


    /**
      * Sets the value of the 'locationId' field.
      * @param value The value of 'locationId'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setLocationId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.locationId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'locationId' field has been set.
      * @return True if the 'locationId' field has been set, false otherwise.
      */
    public boolean hasLocationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'locationId' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearLocationId() {
      locationId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationGroupName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocationGroupName() {
      return locationGroupName;
    }


    /**
      * Sets the value of the 'locationGroupName' field.
      * @param value The value of 'locationGroupName'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setLocationGroupName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.locationGroupName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'locationGroupName' field has been set.
      * @return True if the 'locationGroupName' field has been set, false otherwise.
      */
    public boolean hasLocationGroupName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'locationGroupName' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearLocationGroupName() {
      locationGroupName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxShip' field.
      * @return The value.
      */
    public java.lang.Boolean getTaxShip() {
      return taxShip;
    }


    /**
      * Sets the value of the 'taxShip' field.
      * @param value The value of 'taxShip'.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder setTaxShip(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.taxShip = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'taxShip' field has been set.
      * @return True if the 'taxShip' field has been set, false otherwise.
      */
    public boolean hasTaxShip() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'taxShip' field.
      * @return This builder.
      */
    public com.cj.prototype.avroGenerated.Tax.Builder clearTaxShip() {
      taxShip = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Tax build() {
      try {
        Tax record = new Tax();
        record.rate = fieldSetFlags()[0] ? this.rate : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.countryCode = fieldSetFlags()[1] ? this.countryCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.region = fieldSetFlags()[2] ? this.region : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.postalcode = fieldSetFlags()[3] ? this.postalcode : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.locationId = fieldSetFlags()[4] ? this.locationId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.locationGroupName = fieldSetFlags()[5] ? this.locationGroupName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.taxShip = fieldSetFlags()[6] ? this.taxShip : (java.lang.Boolean) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Tax>
    WRITER$ = (org.apache.avro.io.DatumWriter<Tax>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Tax>
    READER$ = (org.apache.avro.io.DatumReader<Tax>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.rate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.rate);
    }

    if (this.countryCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.countryCode);
    }

    if (this.region == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.region);
    }

    if (this.postalcode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.postalcode);
    }

    if (this.locationId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationId);
    }

    if (this.locationGroupName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationGroupName);
    }

    if (this.taxShip == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.taxShip);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.rate = null;
      } else {
        this.rate = in.readString(this.rate instanceof Utf8 ? (Utf8)this.rate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.countryCode = null;
      } else {
        this.countryCode = in.readString(this.countryCode instanceof Utf8 ? (Utf8)this.countryCode : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.region = null;
      } else {
        this.region = in.readString(this.region instanceof Utf8 ? (Utf8)this.region : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.postalcode = null;
      } else {
        this.postalcode = in.readString(this.postalcode instanceof Utf8 ? (Utf8)this.postalcode : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationId = null;
      } else {
        this.locationId = in.readString(this.locationId instanceof Utf8 ? (Utf8)this.locationId : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationGroupName = null;
      } else {
        this.locationGroupName = in.readString(this.locationGroupName instanceof Utf8 ? (Utf8)this.locationGroupName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.taxShip = null;
      } else {
        this.taxShip = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.rate = null;
          } else {
            this.rate = in.readString(this.rate instanceof Utf8 ? (Utf8)this.rate : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.countryCode = null;
          } else {
            this.countryCode = in.readString(this.countryCode instanceof Utf8 ? (Utf8)this.countryCode : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.region = null;
          } else {
            this.region = in.readString(this.region instanceof Utf8 ? (Utf8)this.region : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.postalcode = null;
          } else {
            this.postalcode = in.readString(this.postalcode instanceof Utf8 ? (Utf8)this.postalcode : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationId = null;
          } else {
            this.locationId = in.readString(this.locationId instanceof Utf8 ? (Utf8)this.locationId : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationGroupName = null;
          } else {
            this.locationGroupName = in.readString(this.locationGroupName instanceof Utf8 ? (Utf8)this.locationGroupName : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.taxShip = null;
          } else {
            this.taxShip = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










